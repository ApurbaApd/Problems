
#include <iostream>
using namespace std;

#define REP(i,n) for(int i=1;i<=n;i++)

#define N 50

int ar[N][N], I[N][N];

//Multiplication of matices
void mul(int A[][N], int B[][N], int dim){
	long long int res[dim+1][dim+1];
	REP(i,dim){
		REP(j,dim){
		    long long int mod =  1000000007 ;
			res[i][j]=0;
			REP(k,dim) res[i][j] = (res[i][j] % mod + ((A[i][k] % mod) * (B[k][j] % mod) % mod)) % mod ;
		}
	}
	REP(i,dim) REP(j,dim) A[i][j] = res[i][j];
}

void power(int A[][N], int dim, int n){
	REP(i,dim) REP(j,dim)
	{
		if(i==j) I[i][j]=1;
		else     I[i][j]=0;
	}
	while(n){
		if(n%2)
		mul(I,A,dim), n--;
		else
		mul(A,A,dim), n/=2;
	}
	
	REP(i,dim) REP(j,dim) A[i][j]=I[i][j];
}


void printMat(int A[][N], int dim){
   REP(i,dim){
     REP(j,dim)
     cout<<A[i][j]<<" ";
     cout<<endl;
   }
   
}


int main() {
	// your code goes here
	//t->total test case
	//dim->dimenson of the matrix
	//n->power of the matrix
	int t, dim, n;
	cin>>t;
	
	while(t--){
		cin>>dim>>n;
		//Taking matrix input
		REP(i,dim) REP(j, dim) cin>>ar[i][j];
		
		//finding power the matrix
		power(ar, dim, n);
		
		//printing the resultant matrix
		printMat(ar, dim);
	}
	
	return 0;
}
